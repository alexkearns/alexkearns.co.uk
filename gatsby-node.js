const path = require("path")

exports.createPages = async ({ graphql, actions, reporter }) => {
  // Destructure the createPage function from the actions object
  const { createPage } = actions

  const result = await graphql(`
    query {
      allFile(filter: {sourceInstanceName: {in: ["blog", "talks"]}}) {
        edges {
          node {
            sourceInstanceName
            childMdx {
              id
              slug
            }
          }
        }
      }
    }
  `)

  if (result.errors) {
    reporter.panicOnBuild('ðŸš¨  ERROR: Loading "createPages" query')
  }

  // Create pages.
  const pages = result.data.allFile.edges

  // you'll call `createPage` for each result
  pages.forEach(({ node }, index) => {
    createPage({
      // The slug generated by gatsby-plugin-mdx doesn't contain a slash at the beginning
      // You can prepend it with any prefix you want
      path: `/${node.sourceInstanceName}/${node.childMdx.slug}`,
      // This component will wrap our MDX content
      component: path.resolve(`./src/templates/Article.js`),
      // You can use the values in this context in
      // our page layout component
      context: { id: node.childMdx.id },
    })
  })
}